# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: deploy, run tests and build

on:
  push:
    branches:
      - "main"
    paths:
      - "cart-service/**"

jobs:
  # detect changes
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      cart-service: ${{ steps.changes.outputs.cart-service }}
      service-name: ${{ steps.changes.outputs.service-name }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet HEAD^ HEAD -- cart-service/; then
             echo "cart-service=false" >> $GITHUB_OUTPUT
           else
             echo "cart-service=true" >> $GITHUB_OUTPUT
           fi
           echo "service-name=cart" >> $GITHUB_OUTPUT

  # test for cart service
  test:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.service-name != ''
    env:
      SERVICE_NAME: ${{ needs.detect-changes.outputs.service-name }}

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: mahanta
          POSTGRES_DB: e_commerce_${{env.SERVICE_NAME}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz  | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: |
          cd ${{env.SERVICE_NAME}}-service
          make migrateup

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Test
        run: |
          cd ${{env.SERVICE_NAME}}-service
          make test

  deploy-cart-service:
    runs-on: ubuntu-latest
    needs:
      - detect-changes
      - test
    if: needs.detect-changes.outputs.cart-service == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
