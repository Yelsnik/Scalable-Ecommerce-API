// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: stripe_account.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createStripeAccount = `-- name: CreateStripeAccount :one
INSERT INTO stripe_accounts (
  id, 
  user_id
) VALUES (
  $1, $2
) RETURNING id, user_id, created_at
`

type CreateStripeAccountParams struct {
	ID     string    `json:"id"`
	UserID uuid.UUID `json:"user_id"`
}

func (q *Queries) CreateStripeAccount(ctx context.Context, arg CreateStripeAccountParams) (StripeAccount, error) {
	row := q.db.QueryRowContext(ctx, createStripeAccount, arg.ID, arg.UserID)
	var i StripeAccount
	err := row.Scan(&i.ID, &i.UserID, &i.CreatedAt)
	return i, err
}

const getStripeAccountById = `-- name: GetStripeAccountById :one
SELECT id, user_id, created_at FROM stripe_accounts 
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetStripeAccountById(ctx context.Context, id string) (StripeAccount, error) {
	row := q.db.QueryRowContext(ctx, getStripeAccountById, id)
	var i StripeAccount
	err := row.Scan(&i.ID, &i.UserID, &i.CreatedAt)
	return i, err
}
