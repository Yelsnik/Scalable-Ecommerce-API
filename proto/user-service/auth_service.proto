syntax = "proto3";

package pb;

import "user-service/user.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "user-service/pb";

message Payload {
    string id = 1;
    string user_id = 2;
    string role = 3;
    google.protobuf.Timestamp issued_at = 4;
    google.protobuf.Timestamp expired_at = 5;
}

message GetUserByIdRequest {
    string id = 1;
}

message GetUserByIdResponse {
    User user = 1;
}

message GetUserByEmailRequest {
    string email = 1;
}

message GetUserByEmailResponse {
    User user = 1;
}

message CreateTokenRequest {
    string user_id = 1;
    string role = 2;
    google.protobuf.Duration duration = 3;
}

message CreateTokenResponse {
    string token = 1;
    Payload payload = 2;
}

message VerifyTokenRequest {
    string token = 1;
}

message VerifyTokenResponse {
    Payload payload = 1;
}

message ExchangeCodeRequest {
    string code = 1;
    string user_id = 2;
}

message ExchangeCodeResponse {
   string stripe_user_id = 1;
   string user_id = 2;
   google.protobuf.Timestamp created_at = 3;
}

message StripeSellerAccountRequest {
    string user_id = 1;
}

message StripeSellerAccountResponse {
    string id = 1;
    string user_id = 2;
    google.protobuf.Timestamp created_at = 3;
}

service AuthService {
    rpc GetUserByID(GetUserByIdRequest) returns (GetUserByIdResponse){}
    rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse){}
    rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {}
    rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse){}
    rpc ExchangeStripeCode(ExchangeCodeRequest) returns (ExchangeCodeResponse) {}
    rpc GetStripeSellerAccount(StripeSellerAccountRequest) returns (StripeSellerAccountResponse) {}
}