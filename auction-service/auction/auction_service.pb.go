// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: auction_service.proto

package auction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAuctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartingPrice float32                `protobuf:"fixed32,5,opt,name=starting_price,json=startingPrice,proto3" json:"starting_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAuctionRequest) Reset() {
	*x = CreateAuctionRequest{}
	mi := &file_auction_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAuctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuctionRequest) ProtoMessage() {}

func (x *CreateAuctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuctionRequest.ProtoReflect.Descriptor instead.
func (*CreateAuctionRequest) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAuctionRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateAuctionRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateAuctionRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateAuctionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateAuctionRequest) GetStartingPrice() float32 {
	if x != nil {
		return x.StartingPrice
	}
	return 0
}

type CreateAuctionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auction       *Auction               `protobuf:"bytes,1,opt,name=auction,proto3" json:"auction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAuctionResponse) Reset() {
	*x = CreateAuctionResponse{}
	mi := &file_auction_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAuctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuctionResponse) ProtoMessage() {}

func (x *CreateAuctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuctionResponse.ProtoReflect.Descriptor instead.
func (*CreateAuctionResponse) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAuctionResponse) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type PlaceBidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	BidderId      string                 `protobuf:"bytes,2,opt,name=bidder_id,json=bidderId,proto3" json:"bidder_id,omitempty"`
	Amount        float32                `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceBidRequest) Reset() {
	*x = PlaceBidRequest{}
	mi := &file_auction_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceBidRequest) ProtoMessage() {}

func (x *PlaceBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceBidRequest.ProtoReflect.Descriptor instead.
func (*PlaceBidRequest) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{2}
}

func (x *PlaceBidRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *PlaceBidRequest) GetBidderId() string {
	if x != nil {
		return x.BidderId
	}
	return ""
}

func (x *PlaceBidRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PlaceBidResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceBidResponse) Reset() {
	*x = PlaceBidResponse{}
	mi := &file_auction_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceBidResponse) ProtoMessage() {}

func (x *PlaceBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceBidResponse.ProtoReflect.Descriptor instead.
func (*PlaceBidResponse) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{3}
}

func (x *PlaceBidResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlaceBidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuctionId     string                 `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBidsRequest) Reset() {
	*x = GetBidsRequest{}
	mi := &file_auction_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBidsRequest) ProtoMessage() {}

func (x *GetBidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBidsRequest.ProtoReflect.Descriptor instead.
func (*GetBidsRequest) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetBidsRequest) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

type GetBidsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bid           *Bid                   `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBidsResponse) Reset() {
	*x = GetBidsResponse{}
	mi := &file_auction_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBidsResponse) ProtoMessage() {}

func (x *GetBidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBidsResponse.ProtoReflect.Descriptor instead.
func (*GetBidsResponse) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetBidsResponse) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

type GetAuctionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionsRequest) Reset() {
	*x = GetAuctionsRequest{}
	mi := &file_auction_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionsRequest) ProtoMessage() {}

func (x *GetAuctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionsRequest.ProtoReflect.Descriptor instead.
func (*GetAuctionsRequest) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{6}
}

type GetAuctionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionsResponse) Reset() {
	*x = GetAuctionsResponse{}
	mi := &file_auction_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionsResponse) ProtoMessage() {}

func (x *GetAuctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionsResponse.ProtoReflect.Descriptor instead.
func (*GetAuctionsResponse) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{7}
}

type GetAuctionByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionByIDRequest) Reset() {
	*x = GetAuctionByIDRequest{}
	mi := &file_auction_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionByIDRequest) ProtoMessage() {}

func (x *GetAuctionByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAuctionByIDRequest) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{8}
}

type GetAuctionByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuctionByIDResponse) Reset() {
	*x = GetAuctionByIDResponse{}
	mi := &file_auction_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuctionByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuctionByIDResponse) ProtoMessage() {}

func (x *GetAuctionByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuctionByIDResponse.ProtoReflect.Descriptor instead.
func (*GetAuctionByIDResponse) Descriptor() ([]byte, []int) {
	return file_auction_service_proto_rawDescGZIP(), []int{9}
}

var File_auction_service_proto protoreflect.FileDescriptor

var file_auction_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x62, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x0f, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x46, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x03, 0x62, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x88, 0x03,
	0x0a, 0x0e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x12,
	0x18, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64,
	0x73, 0x12, 0x17, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x19, 0x5a, 0x17, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auction_service_proto_rawDescOnce sync.Once
	file_auction_service_proto_rawDescData = file_auction_service_proto_rawDesc
)

func file_auction_service_proto_rawDescGZIP() []byte {
	file_auction_service_proto_rawDescOnce.Do(func() {
		file_auction_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_auction_service_proto_rawDescData)
	})
	return file_auction_service_proto_rawDescData
}

var file_auction_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_auction_service_proto_goTypes = []any{
	(*CreateAuctionRequest)(nil),   // 0: auction.CreateAuctionRequest
	(*CreateAuctionResponse)(nil),  // 1: auction.CreateAuctionResponse
	(*PlaceBidRequest)(nil),        // 2: auction.PlaceBidRequest
	(*PlaceBidResponse)(nil),       // 3: auction.PlaceBidResponse
	(*GetBidsRequest)(nil),         // 4: auction.GetBidsRequest
	(*GetBidsResponse)(nil),        // 5: auction.GetBidsResponse
	(*GetAuctionsRequest)(nil),     // 6: auction.GetAuctionsRequest
	(*GetAuctionsResponse)(nil),    // 7: auction.GetAuctionsResponse
	(*GetAuctionByIDRequest)(nil),  // 8: auction.GetAuctionByIDRequest
	(*GetAuctionByIDResponse)(nil), // 9: auction.GetAuctionByIDResponse
	(*timestamppb.Timestamp)(nil),  // 10: google.protobuf.Timestamp
	(*Auction)(nil),                // 11: auction.Auction
	(*Bid)(nil),                    // 12: auction.Bid
}
var file_auction_service_proto_depIdxs = []int32{
	10, // 0: auction.CreateAuctionRequest.start_time:type_name -> google.protobuf.Timestamp
	10, // 1: auction.CreateAuctionRequest.end_time:type_name -> google.protobuf.Timestamp
	11, // 2: auction.CreateAuctionResponse.auction:type_name -> auction.Auction
	12, // 3: auction.GetBidsResponse.bid:type_name -> auction.Bid
	0,  // 4: auction.AuctionService.CreateAuction:input_type -> auction.CreateAuctionRequest
	8,  // 5: auction.AuctionService.GetAuctionById:input_type -> auction.GetAuctionByIDRequest
	6,  // 6: auction.AuctionService.GetAuctions:input_type -> auction.GetAuctionsRequest
	2,  // 7: auction.AuctionService.PlaceBid:input_type -> auction.PlaceBidRequest
	4,  // 8: auction.AuctionService.GetBids:input_type -> auction.GetBidsRequest
	1,  // 9: auction.AuctionService.CreateAuction:output_type -> auction.CreateAuctionResponse
	9,  // 10: auction.AuctionService.GetAuctionById:output_type -> auction.GetAuctionByIDResponse
	7,  // 11: auction.AuctionService.GetAuctions:output_type -> auction.GetAuctionsResponse
	3,  // 12: auction.AuctionService.PlaceBid:output_type -> auction.PlaceBidResponse
	5,  // 13: auction.AuctionService.GetBids:output_type -> auction.GetBidsResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_auction_service_proto_init() }
func file_auction_service_proto_init() {
	if File_auction_service_proto != nil {
		return
	}
	file_auction_proto_init()
	file_bid_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auction_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auction_service_proto_goTypes,
		DependencyIndexes: file_auction_service_proto_depIdxs,
		MessageInfos:      file_auction_service_proto_msgTypes,
	}.Build()
	File_auction_service_proto = out.File
	file_auction_service_proto_rawDesc = nil
	file_auction_service_proto_goTypes = nil
	file_auction_service_proto_depIdxs = nil
}
