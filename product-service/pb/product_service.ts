// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.0
//   protoc               v3.12.4
// source: product_service.proto

/* eslint-disable */
import { BinaryReader } from "@bufbuild/protobuf/wire";
import { CreateProductRequest, CreateProductResponse } from "./rpc_create_product";

export const protobufPackage = "pb";

export interface ProductService {
  AddProduct(request: CreateProductRequest): Promise<CreateProductResponse>;
}

export const ProductServiceServiceName = "pb.ProductService";
export class ProductServiceClientImpl implements ProductService {
  private readonly rpc: Rpc;
  private readonly service: string;
  constructor(rpc: Rpc, opts?: { service?: string }) {
    this.service = opts?.service || ProductServiceServiceName;
    this.rpc = rpc;
    this.AddProduct = this.AddProduct.bind(this);
  }
  AddProduct(request: CreateProductRequest): Promise<CreateProductResponse> {
    const data = CreateProductRequest.encode(request).finish();
    const promise = this.rpc.request(this.service, "AddProduct", data);
    return promise.then((data) => CreateProductResponse.decode(new BinaryReader(data)));
  }
}

interface Rpc {
  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
